name: build-deploy
on:
  pull_request:
  push:

jobs:
  phpunit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
      - name: Install dependencies
        run: composer install --no-progress --no-suggest
      - name: Run PHPUnit
        run: composer run phpunit
  phpcs:
    needs: phpunit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
      - name: Install dependencies
        run: composer install --no-progress --no-suggest
      - name: Run CodeSniffer
        run: composer run phpcs
  codebuild:
    needs: phpcs
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::656337613100:role/slim-github-oidcid
          role-session-name: slim-session
          aws-region: ap-northeast-1
      - name: Code Build
        run: aws codebuild start-build --project-name slim-build
      - name: Check build status
        run: |
          build_status=$(aws codebuild batch-get-builds --ids $(aws codebuild list-builds-for-project --project-name my-project --query 'ids[0]' --output text) --query 'builds[0].buildStatus' --output text)
          echo "Build Status: $build_status"
          echo "::set-output name=status::$build_status"
  test:
    needs: codebuild
    if: ${{ needs.codebuild.outputs.status == 'SUCCEEDED' }}
    runs-on: ubuntu-latest
    steps:
      - name: hello
        run: echo 'hello'
  # codedeploy:
  #   needs: codebuild
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Set up AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         role-to-assume: arn:aws:iam::656337613100:role/slim-github-oidcid
  #         role-session-name: slim-session
  #         aws-region: ap-northeast-1
  #     - name: Code Deploy
  #       run: >
  #           aws deploy create-deployment
  #           --application-name slim
  #           --deployment-config-name CodeDeployDefault.AllAtOnce
  #           --deployment-group-name slim-deploy-group
  #           --s3-location bucket=slim-codebuild-bucket,bundleType=zip,key=slim-build